1.

QUESTIONS:

A). Clone, Fork, git pull, git add ., git commit - m "my commit",   git push. 
B). git pull-request (do from gui) ,  git merge , git rebase, git branch, git checkout       branch name,
C) git branch, git reset, git reset --medium HEAD (default), git reset --hard HEAD, git reset soft, git reset HEARD~3

D) git checkout commitID,  git checkout -b newbranch ,  git branch existing-branch
E) git revert, git fetch, git pull,  GitHub Desktop, GitHub GUI Brower

ANSWERS


CLONE: pull a copy,

FORK:  fork other people project and clone and push. You can't directly push to others project . You don't have permission

GITHUB PULL REQUEST: do it from Github GUI nicer. Generally you do so reviewer can review . They get red notification can can find out diff and approve. They can merge as well

GIT MERGE: git merge ay feature to dev branch. Push changes of feature branch to dev

GIT REBASE: git rehabs done before .

**

GIT BRANCH:  displays all branch.

GIT CHECKOUT BEANCH-NAME:  it checkouts branch eg dev branch
GIT BRANCH NEWBRANCH :
git chekout -b anotherbranch:  up both creates new branch

GIT LOG --ONELINE:  displays all commit reverts in one line.

GIT CHECKOUT COMMIT-CODE: In branch restore local with c=to certain commit. Again to get all commit    GIT CHECKOUT BEANCH-NAME

GIT RESET: When we unstage, stage and commit . To reset back is called reset 

GIT RESET --HARD HEAD : it reset to previous head committed . All new written will be wiped out if hasn't been pushed
**

GIT RESET --MEDIUM HEAD:  

GIT RESET --SOFT HEAD

GIT RESET  HEAD~3




GIT REVERT:   Committed cannot be backed by reset soo revert is used it revert last committed  .  It has  **8








